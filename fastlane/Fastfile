# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do

  # Runs before all tasks
  before_all do

   # Add SLACK_URL & make it accessible to all lanes
   ENV["SLACK_URL"]
  end

  desc "Run Test"
    lane :run_test do
      distribute()
  end

  desc "Run Internal Lint"
    lane :run_check do
      gradle(task: "clean check")
      run_debug_jacoco_unit_test()
  end

  desc "Run Dev Debug Jacoco Unit Test"
    lane :run_debug_jacoco_unit_test do
      gradle(task: "clean testDevDebugUnitTest")
      run_detekt()
  end

  desc "Run Test"
    lane :run_detekt do
      gradle(task: "clean detekt")
      run_sonarqube()
  end

  desc "Run Test"
    lane :run_sonarqube do
      gradle(task: "clean sonarqube -Dsonar.host.url=http://localhost:9000/ -Dsonar.login=cf97b3df98b4b54e143af533d126cc83a7544db6")
  end

  # use like this `fastlane distribute group:only-me`
  desc "Deploy latest Beta build to Firebase App Distribution"
    lane :distribute do |options|
      if options[:group]
        build_android_app(
          task: "assemble",
          flavor: "prod",
          build_type: "release"
        )

        firebase_app_distribution(
          app: ENV['FIREBASE_APP_ID_ANDROID'],
          groups: options[:group],
          release_notes: "Fastlane Droid Release Notes Updated 1.0.1",
          firebase_cli_path: "/usr/local/bin/firebase",
          firebase_cli_token: ENV['FIREBASE_CI_TOKEN']
      )
      else
        UI.user_error!("Missing group name!")
      end
    end

  # Runs after all tasks. This block is called only when the executed lane is successful
  after_all do |lane|

    # Slack action
    # slack(message: ":rocket: Successful Deployment! :rocket:")
  end

  error do |lane, exception|
    slack(
      message: exception.message,
      success: false
      )
  end

end