# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do

  # Runs before all tasks
  before_all do

   # Add SLACK_URL & make it accessible to all lanes
   ENV["SLACK_URL"]
  end

  desc "Run Test"
    lane :run_test do
      gradle(task: "clean test")
      beta()
  end

  desc "Run Internal Lint"
    lane :run_check do
      gradle(task: "clean check")
      run_debug_jacoco_unit_test()
  end

  desc "Run Dev Debug Jacoco Unit Test"
    lane :run_debug_jacoco_unit_test do
      gradle(task: "clean testDevDebugUnitTest")
      run_detekt()
  end

  desc "Run Test"
    lane :run_detekt do
      gradle(task: "clean detekt")
      run_sonarqube()
  end

  desc "Run Test"
    lane :run_sonarqube do
      gradle(task: "clean sonarqube -Dsonar.host.url=http://localhost:9000/ -Dsonar.login=cf97b3df98b4b54e143af533d126cc83a7544db6")
      beta()
  end

  # Fastfile actions accept additional configuration, but
  # don't worry, fastlane will prompt you for required
  # info which you can add here later
  lane :beta do
    # build the release variant
    build_android_app(task: "assembleRelease")

    # upload to Beta by Crashlytics
    crashlytics(
      # keys for organization: Andromax
      api_token: "261e27dc5baae72193fd64e849234ca4bcf6971d",
      build_secret: "6a55850a03e3fd0d2717a5a64608fe49d0c142a68c0f44793c92ba6bd522087e"
    )
    slack(message: ":rocket: Successful Deployment! :rocket:")
  end

  # Runs after all tasks. This block is called only when the executed lane is successful
  after_all do |lane|

    # Slack action
    # slack(message: ":rocket: Successful Deployment! :rocket:")
  end

  error do |lane, exception|
    slack(
      message: exception.message,
      success: false
      )
  end

end